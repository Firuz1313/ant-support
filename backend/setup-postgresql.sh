#!/bin/bash

# PostgreSQL Setup Script for ANT Support Backend
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å PostgreSQL –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±—ç–∫–µ–Ω–¥–æ–º

set -e

echo "üîß ANT Support Backend - PostgreSQL Setup"
echo "========================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ psql
if ! command -v psql &> /dev/null; then
    echo "‚ùå ERROR: PostgreSQL client (psql) –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PostgreSQL:"
    echo "  Ubuntu/Debian: sudo apt install postgresql postgresql-client"
    echo "  macOS: brew install postgresql"
    echo "  Windows: —Å–∫–∞—á–∞–π—Ç–µ —Å https://www.postgresql.org/download/"
    exit 1
fi

# –ß–∏—Ç–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
if [ -f .env ]; then
    export $(grep -v '^#' .env | xargs)
else
    echo "‚ùå ERROR: .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
REQUIRED_VARS=("DB_HOST" "DB_PORT" "DB_NAME" "DB_USER" "DB_PASSWORD")
for var in "${REQUIRED_VARS[@]}"; do
    if [ -z "${!var}" ]; then
        echo "‚ùå ERROR: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ .env"
        exit 1
    fi
done

echo "üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PostgreSQL:"
echo "   Host: $DB_HOST:$DB_PORT"
echo "   Database: $DB_NAME"
echo "   User: $DB_USER"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∫–æ–º–∞–Ω–¥
run_sql() {
    PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d postgres -c "$1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..."
if ! PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d postgres -c "SELECT 1;" &> /dev/null; then
    echo "‚ùå ERROR: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:"
    echo "  - PostgreSQL —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω"
    echo "  - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ .env —Ñ–∞–π–ª–µ"
    echo "  - –ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $DB_USER"
    exit 1
fi

echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ"

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
echo "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö $DB_NAME..."
DB_EXISTS=$(PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='$DB_NAME';" 2>/dev/null || echo "")

if [ -z "$DB_EXISTS" ]; then
    echo "üìä –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö $DB_NAME..."
    run_sql "CREATE DATABASE \"$DB_NAME\";"
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö $DB_NAME —Å–æ–∑–¥–∞–Ω–∞"
else
    echo "üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö $DB_NAME —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –±–∞–∑–µ
echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö $DB_NAME..."
if ! PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "SELECT 1;" &> /dev/null; then
    echo "‚ùå ERROR: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞ÔøΩÔøΩ–Ω—ã—Ö $DB_NAME"
    exit 1
fi

echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö $DB_NAME —É—Å–ø–µ—à–Ω–æ"

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π..."
if npm run db:migrate; then
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå ERROR: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
echo "üîÑ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏..."
timeout 30s npm start &
SERVER_PID=$!

sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoints
echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoints..."
if curl -f http://localhost:3000/health &> /dev/null; then
    echo "‚úÖ /health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå ERROR: /health endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

if curl -f http://localhost:3000/health/db &> /dev/null; then
    echo "‚úÖ /health/db endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå ERROR: /health/db endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
kill $SERVER_PID 2>/dev/null || true
wait $SERVER_PID 2>/dev/null || true

echo ""
echo "üéâ PostgreSQL setup completed successfully!"
echo ""
echo "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:"
echo "  - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä: npm start"
echo "  - –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: npm run db:seed"
echo "  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å health: curl http://localhost:3000/health/db"
echo ""
echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ –≤ FAIL-FAST —Ä–µ–∂–∏–º–µ"
