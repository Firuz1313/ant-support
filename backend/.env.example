# ===== ОБЯЗАТЕЛЬНЫЕ ПЕРЕМЕННЫЕ ОКРУЖЕНИЯ =====
# Все переменные ОБЯЗАТЕЛЬНЫ - при отсутствии любой из них сервер НЕ ЗАПУСТИТСЯ

# Настройки приложения
APP_ENV=local
APP_PORT=3000

# ===== КОНФИГУРАЦИЯ POSTGRESQL (ОБЯЗАТЕЛЬНО) =====
# ВНИМАНИЕ: Все параметры БД обязательны для заполнения
# Система работает ТОЛЬКО с PostgreSQL - никаких fallback нет!

DB_HOST=localhost
DB_PORT=5432
DB_NAME=your_db_name
DB_USER=your_db_user
DB_PASSWORD=your_db_password
DB_SSL=false

# ===== ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ =====

# CORS настройки
CORS_ORIGIN=http://localhost:5173

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Безопасность
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_EXPIRES_IN=7d
BCRYPT_ROUNDS=12

# Uploads
UPLOAD_MAX_SIZE=10485760
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif,image/webp,image/svg+xml

# Middleware
HELMET_ENABLED=true
COMPRESSION_ENABLED=true
REQUEST_LOGGING=true

# API настройки
API_VERSION=v1
API_PREFIX=/api

# Разработка (опциональные)
DEBUG=true
LOG_LEVEL=debug
DEBUG_SQL=false

# ===== ИНСТРУКЦИИ ПО НАСТРОЙКЕ =====
#
# 1. Скопируйте этот файл как .env:
#    cp .env.example .env
#
# 2. Заполните ОБЯЗАТЕЛЬНЫЕ параметры PostgreSQL:
#    - DB_HOST: адрес сервера PostgreSQL
#    - DB_PORT: порт PostgreSQL (обычно 5432)
#    - DB_NAME: имя базы данных
#    - DB_USER: пользователь PostgreSQL
#    - DB_PASSWORD: пароль пользователя
#    - DB_SSL: использовать SSL (true/false)
#
# 3. Создайте базу данных и пользователя:
#    psql -h localhost -U postgres -c "CREATE DATABASE your_db_name;"
#    psql -h localhost -U postgres -c "CREATE USER your_db_user WITH PASSWORD 'your_db_password';"
#    psql -h localhost -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE your_db_name TO your_db_user;"
#
# 4. Запустите миграции:
#    npm run db:migrate
#
# 5. Запустите сервер:
#    npm start
#
# ===== ВАЖНЫЕ ЗАМЕЧАНИЯ =====
#
# - Сервер работает в FAIL-FAST режиме
# - При недоступности PostgreSQL сервер НЕМЕДЛЕННО завершает работу
# - Никаких fallback или моков нет и не будет
# - Все API запросы требуют рабочего подключения к PostgreSQL
#
# ===== ПРОВЕРКА РАБОТОСПОСОБНОСТИ =====
#
# Проверьте подключение к БД:
#   curl http://localhost:3000/health/db
#
# Ожидаемый ответ при успехе:
#   {"status":"ok","latencyMs":...,"database":{"connected":true}}
#
# При ошибке сервер вернет 503 и остановится.
